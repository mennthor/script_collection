# coding: utf-8

"""
Collection of nice colors and custom color maps.
"""

import matplotlib as _mpl


# Single colors
dg = "#353132"  # my not-so-black black

# Color palletes
clr_muted = {
    "r": "#FF5555",
    "b": "#5DA5DA",
    "g": "#7BAA00",
    "k": dg,
    "o": "#FFA955",
    "m": "#9E62C4",
    "n": "#9D7331",
    "p": "#F590CF",
    "c": "#6DE4DF",
    "y": "#FFDC55",
}

# Color maps
rgb_cmap = {  # Red -> Green -> Blue. Kind of bright gradient
    "blue": (
        (0.00, 0.00, 0.00),
        (0.50, 0.00, 0.00),
        (0.75, 1.00, 1.00),
        (1.00, 1.00, 1.00),
    ),
    "green": (
        (0.00, 0.25, 0.25),
        (0.25, 0.60, 0.60),
        (0.50, 0.90, 0.90),
        (0.75, 0.70, 0.70),
        (1.00, 0.50, 0.50),
    ),
    "red": (
        (0.00, 1.00, 1.00),
        (0.25, 0.75, 0.75),
        (0.50, 0.00, 0.00),
        (1.00, 0.00, 0.00),
    ),
}
rgb_cmap = _mpl.colors.LinearSegmentedColormap("rgb_cmap", rgb_cmap, 256)

ryb_cmap = {  # Red -> Yellow -> Blue to indicate times early -> late
    "blue": (
        (0.00, 0.00, 0.00),
        (0.50, 0.00, 0.00),
        (0.75, 0.90, 0.90),
        (1.00, 1.00, 1.00),
    ),
    "green": (
        (0.00, 0.25, 0.25),
        (0.25, 0.50, 0.50),
        (0.50, 0.90, 0.90),
        (0.75, 0.50, 0.50),
        (1.00, 0.25, 0.25),
    ),
    "red": (
        (0.00, 0.90, 0.90),
        (0.50, 0.90, 0.90),
        (0.75, 0.15, 0.15),
        (1.00, 0.50, 0.50),
    ),
}
ryb_cmap = _mpl.colors.LinearSegmentedColormap("ryb_cmap", ryb_cmap, 256)

ps_cmap = {  # PS colormap from skylab
    "blue": (
        (0.0, 0.0, 1.0),
        (0.05, 1.0, 1.0),
        (0.4, 1.0, 1.0),
        (0.6, 1.0, 1.0),
        (0.7, 0.2, 0.2),
        (1.0, 0.0, 0.0),
    ),
    "green": (
        (0.0, 0.0, 1.0),
        (0.05, 1.0, 1.0),
        (0.5, 0.0416, 0.0416),
        (0.6, 0.0, 0.0),
        (0.8, 0.5, 0.5),
        (1.0, 1.0, 1.0),
    ),
    "red": (
        (0.0, 0.0, 1.0),
        (0.05, 1.0, 1.0),
        (0.5, 0.0416, 0.0416),
        (0.6, 0.0416, 0.0416),
        (0.7, 1.0, 1.0),
        (1.0, 1.0, 1.0),
    ),
    # "alpha" : ( # Set the beginning white part transparent
    #     (0.0, 0.0, 0.0),
    #     (0.05, 1.0, 1.0),
    #     (1.0, 1.0, 1.0),
    #  )
}
ps_cmap = _mpl.colors.LinearSegmentedColormap("ps_cmap", ps_cmap, 256)

# Simple exchange of red with blue channel from the RdGy color map
_BuGy_data = (
    (0.12156862745098039, 0.0                , 0.40392156862745099),
    (0.16862745098039217, 0.09411764705882353, 0.69803921568627447),
    (0.30196078431372547, 0.37647058823529411, 0.83921568627450982),
    (0.50980392156862742, 0.6470588235294118 , 0.95686274509803926),
    (0.7803921568627451 , 0.85882352941176465, 0.99215686274509807),
    (1.0                , 1.0                , 1.0                ),
    (0.8784313725490196 , 0.8784313725490196 , 0.8784313725490196 ),
    (0.72941176470588232, 0.72941176470588232, 0.72941176470588232),
    (0.52941176470588236, 0.52941176470588236, 0.52941176470588236),
    (0.30196078431372547, 0.30196078431372547, 0.30196078431372547),
    (0.10196078431372549, 0.10196078431372549, 0.10196078431372549)
    )

cmap_bugy = _mpl.colors.LinearSegmentedColormap.from_list("BuGy", _BuGy_data)
cmap_bugy_r = _mpl.colors.LinearSegmentedColormap.from_list("BuGy",
                                                            _BuGy_data[::-1])
